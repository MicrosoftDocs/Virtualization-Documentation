{
    "swagger": "2.0",
    "info": {
        "title": "Schema Open API",
        "version": "2.4"
    },
    "paths": {},
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "Attachment": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "$ref": "#/definitions/AttachmentType"
                },
                "Path": {
                    "type": "string"
                },
                "CachingMode": {
                    "type": "string",
                    "$ref": "#/definitions/CachingMode"
                },
                "ReadOnly": {
                    "type": "boolean"
                },
                "SupportCompressedVolumes": {
                    "type": "boolean"
                }
            }
        },
        "AttributionRecord": {
            "type": "object",
            "properties": {}
        },
        "BasicInformation": {
            "type": "object",
            "properties": {
                "SupportedSchemaVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Version"
                    }
                }
            }
        },
        "Battery": {
            "type": "object",
            "properties": {}
        },
        "Chipset": {
            "type": "object",
            "properties": {
                "Uefi": {
                    "$ref": "#/definitions/Uefi"
                },
                "IsNumLockDisabled": {
                    "type": "boolean"
                },
                "BaseBoardSerialNumber": {
                    "type": "string"
                },
                "ChassisSerialNumber": {
                    "type": "string"
                },
                "ChassisAssetTag": {
                    "type": "string"
                },
                "UseUtc": {
                    "type": "boolean"
                },
                "LinuxKernelDirect": {
                    "$ref": "#/definitions/LinuxKernelDirect"
                }
            }
        },
        "CimMount": {
            "type": "object",
            "properties": {
                "ImagePath": {
                    "type": "string"
                },
                "FileSystemName": {
                    "type": "string"
                },
                "VolumeGuid": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                }
            }
        },
        "CloseHandle": {
            "type": "object",
            "properties": {
                "Handle": {
                    "type": "string",
                    "$ref": "#/definitions/StdHandle"
                }
            }
        },
        "CombinedLayers": {
            "type": "object",
            "description": "Object used by a modify request to add or remove a combined layers structure in the guest. For Windows, the GCS applies a filter in ContainerRootPath using the specified layers as the parent content. Ignores property ScratchPath since the container path is already the scratch path. For linux, the GCS unions the specified layers and ScratchPath together, placing the resulting union filesystem at ContainerRootPath.",
            "properties": {
                "Layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Layer"
                    },
                    "description": "Layer hierarchy to be combined."
                },
                "ScratchPath": {
                    "type": "string"
                },
                "ContainerRootPath": {
                    "type": "string"
                }
            }
        },
        "ComPort": {
            "type": "object",
            "description": "ComPort specifies the named pipe that will be used for the port, with empty string indicating a disconnected port.",
            "properties": {
                "NamedPipe": {
                    "type": "string"
                },
                "OptimizeForDebugger": {
                    "type": "boolean"
                }
            }
        },
        "ComputeSystem": {
            "type": "object",
            "description": "Describes the configuration of a compute system to create with all of the necessary resources it requires for a successful boot.",
            "properties": {
                "Owner": {
                    "type": "string",
                    "description": "A string identifying the owning client for this system."
                },
                "SchemaVersion": {
                    "$ref": "#/definitions/Version"
                },
                "HostingSystemId": {
                    "type": "string",
                    "description": "The identifier of the compute system that will host the system described by HostedSystem. The hosting system must already have been created."
                },
                "HostedSystem": {
                    "type": "object",
                    "description": "The JSON describing the compute system that will be launched inside of the system identified by HostingSystemId. This property is mutually exclusive with the Container and VirtualMachine properties."
                },
                "Container": {
                    "$ref": "#/definitions/Container"
                },
                "VirtualMachine": {
                    "$ref": "#/definitions/VirtualMachine"
                },
                "ShouldTerminateOnLastHandleClosed": {
                    "type": "boolean",
                    "description": "If true, this system will be forcibly terminated when the last HCS_SYSTEM handle corresponding to it is closed."
                }
            }
        },
        "ConsoleSize": {
            "type": "object",
            "properties": {
                "Height": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Width": {
                    "type": "integer",
                    "format": "uint16"
                }
            }
        },
        "Container": {
            "type": "object",
            "description": "Configuration of a Windows Server Container, used during its creation to set up and/or use resources.",
            "properties": {
                "GuestOs": {
                    "$ref": "#/definitions/GuestOs"
                },
                "Storage": {
                    "$ref": "#/definitions/Storage"
                },
                "MappedDirectories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MappedDirectory"
                    },
                    "description": "Optional list of directories in the container host that will be mapped to the container guest on creation."
                },
                "MappedPipes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MappedPipe"
                    },
                    "description": "Optional list of named pipes in the container host that will be mapped to the container guest on creation."
                },
                "Memory": {
                    "$ref": "#/definitions/Container_Memory"
                },
                "Processor": {
                    "$ref": "#/definitions/Container_Processor"
                },
                "Networking": {
                    "$ref": "#/definitions/Networking"
                },
                "HvSocket": {
                    "$ref": "#/definitions/Container_HvSocket"
                },
                "ContainerCredentialGuard": {
                    "$ref": "#/definitions/ContainerCredentialGuardState"
                },
                "RegistryChanges": {
                    "$ref": "#/definitions/RegistryChanges"
                },
                "AssignedDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Device"
                    },
                    "description": "Optional list of direct device assignment configurations."
                }
            }
        },
        "Container_HvSocket": {
            "type": "object",
            "description": "Describes the HvSocket configuration and options for a container.",
            "properties": {
                "Config": {
                    "$ref": "#/definitions/HvSocketSystemConfig"
                },
                "EnablePowerShellDirect": {
                    "type": "boolean",
                    "description": "When true, enables Powershell Direct service in the guest to allow it to use the HvSocket transport."
                }
            }
        },
        "Container_Memory": {
            "type": "object",
            "description": "Describes memory configuration for a container.",
            "properties": {
                "SizeInMB": {
                    "type": "integer",
                    "format": "uint64",
                    "description": "Specifies the memory size in megabytes."
                }
            }
        },
        "Container_Processor": {
            "type": "object",
            "description": "Specifies CPU limits for a container. Count, Maximum and Weight are all mutually exclusive.",
            "properties": {
                "Count": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Optional property that represents the fraction of the configured processor count in a container in relation to the processors available in the host. The fraction ultimately determines the portion of processor cycles that the threads in a container can use during each scheduling interval, as the number of cycles per 10,000 cycles."
                },
                "Weight": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional property that limits the share of processor time given to the container relative to other workloads on the processor. The processor weight is a value between 0 and 10000."
                },
                "Maximum": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional property that determines the portion of processor cycles that the threads in a container can use during each scheduling interval, as the number of cycles per 10,000 cycles. Set processor maximum to a percentage times 100."
                }
            }
        },
        "ContainerCredentialGuardAddInstanceRequest": {
            "type": "object",
            "description": "Object describing a request to add a Container Credential Guard Instance.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "Globally unique identifier to use for the Container Credential Guard Instance."
                },
                "CredentialSpec": {
                    "type": "string",
                    "description": "JSON document as a string that describes the Container Credential Guard Instance's credential specification to use."
                },
                "Transport": {
                    "type": "string",
                    "$ref": "#/definitions/ContainerCredentialGuardTransport"
                }
            }
        },
        "ContainerCredentialGuardHvSocketServiceConfig": {
            "type": "object",
            "description": "Specifies the HvSocket configurations required for a Container Credential Guard instance that is meant to be used with HvSocket transport.",
            "properties": {
                "ServiceId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
                    "description": "Identifier of the service that needs to be configured over HvSocket."
                },
                "ServiceConfig": {
                    "$ref": "#/definitions/HvSocketServiceConfig"
                }
            }
        },
        "ContainerCredentialGuardInstance": {
            "type": "object",
            "description": "Describes the configuration of a running Container Credential Guard Instance.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "Identifier of a Container Credential Guard Instance, globally unique."
                },
                "CredentialGuard": {
                    "$ref": "#/definitions/ContainerCredentialGuardState"
                },
                "HvSocketConfig": {
                    "$ref": "#/definitions/ContainerCredentialGuardHvSocketServiceConfig"
                }
            }
        },
        "ContainerCredentialGuardOperationRequest": {
            "type": "object",
            "description": "Object describing a Container Credential Guard system request.",
            "properties": {
                "Operation": {
                    "type": "string",
                    "$ref": "#/definitions/ContainerCredentialGuardModifyOperation"
                },
                "OperationDetails": {
                    "type": "object",
                    "description": "Object describing the input properties used by the specified operation type."
                }
            }
        },
        "ContainerCredentialGuardRemoveInstanceRequest": {
            "type": "object",
            "description": "Object describing a request to remove a running Container Credential Guard Instance.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "Globally unique identifier of a running Container Credential Guard Instance."
                }
            }
        },
        "ContainerCredentialGuardState": {
            "type": "object",
            "properties": {
                "Cookie": {
                    "type": "string",
                    "format": "binary",
                    "description": "Authentication cookie for calls to a Container Credential Guard instance."
                },
                "RpcEndpoint": {
                    "type": "string",
                    "description": "Name of the RPC endpoint of the Container Credential Guard instance."
                },
                "Transport": {
                    "type": "string",
                    "$ref": "#/definitions/ContainerCredentialGuardTransport"
                },
                "CredentialSpec": {
                    "type": "string",
                    "description": "Credential spec used for the configured Container Credential Guard instance."
                }
            }
        },
        "ContainerCredentialGuardSystemInfo": {
            "type": "object",
            "description": "Object listing the system's running Container Credential Guard Instances.",
            "properties": {
                "Instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContainerCredentialGuardInstance"
                    },
                    "description": "Array of running Container Credential Guard Instances."
                }
            }
        },
        "CpuGroup": {
            "type": "object",
            "description": "CPU groups allow Hyper-V administrators to better manage and allocate the host's CPU resources across guest virtual machines",
            "properties": {
                "Id": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                }
            }
        },
        "CpuGroupAffinity": {
            "type": "object",
            "properties": {
                "LogicalProcessorCount": {
                    "type": "integer",
                    "format": "uint32"
                },
                "LogicalProcessors": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            }
        },
        "CpuGroupConfig": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "Affinity": {
                    "$ref": "#/definitions/CpuGroupAffinity"
                },
                "GroupProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CpuGroupProperty"
                    }
                }
            }
        },
        "CpuGroupConfigurations": {
            "type": "object",
            "description": "Structure used to return cpu groups for a Service property query",
            "properties": {
                "CpuGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CpuGroupConfig"
                    }
                }
            }
        },
        "CpuGroupProperty": {
            "type": "object",
            "properties": {
                "PropertyCode": {
                    "type": "integer",
                    "format": "uint32"
                },
                "PropertyValue": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "CrashOptions": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "$ref": "#/definitions/CrashType"
                }
            }
        },
        "CrashReport": {
            "type": "object",
            "description": "Crash information reported through HcsEventSystemCrashInitiated and HcsEventSystemCrashReport notifications. This object is also used as the input to HcsSubmitWerReport.",
            "properties": {
                "SystemId": {
                    "type": "string",
                    "description": "Compute system id the CrashReport is for."
                },
                "ActivityId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
                    "description": "Trace correlation activity Id."
                },
                "WindowsCrashInfo": {
                    "$ref": "#/definitions/WindowsCrashReport"
                },
                "CrashParameters": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "description": "Crash parameters as reported by the guest OS. For Windows these correspond to the bug check code followed by 4 bug check code specific values. The CrashParameters are available in both HcsEventSystemCrashInitiated and HcsEventSystemCrashReport events."
                },
                "CrashLog": {
                    "type": "string",
                    "description": "An optional string provided by the guest OS. Currently only used by Linux guest OSes with Hyper-V Linux Integration Services configured."
                }
            }
        },
        "CreateGroupOperation": {
            "type": "object",
            "description": "Create group operation settings",
            "properties": {
                "GroupId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "LogicalProcessorCount": {
                    "type": "integer",
                    "format": "uint32"
                },
                "LogicalProcessors": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            }
        },
        "DeleteGroupOperation": {
            "type": "object",
            "description": "Delete group operation settings",
            "properties": {
                "GroupId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "$ref": "#/definitions/DeviceType"
                },
                "InterfaceClassGuid": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
                    "description": "The interface class guid of the device interfaces to assign to the container. Only used when Type is ClassGuid."
                },
                "LocationPath": {
                    "type": "string",
                    "description": "The location path of the device to assign to the container. Only used when Type is DeviceInstance."
                }
            }
        },
        "Devices": {
            "type": "object",
            "properties": {
                "ComPorts": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ComPort"
                    },
                    "description": "An optional object that maps COM Port objects for any ports configured on the virtual machine. The key in the map is the integer, starting from zero, that will identify the COM port into the guest."
                },
                "VirtioSerial": {
                    "$ref": "#/definitions/VirtioSerial"
                },
                "Scsi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Scsi"
                    },
                    "description": "An optional object that maps SCSI controllers, identified by friendly name. The provided name is hashed to create the controller's channel instance identifier. If the name is already a GUID, that GUID will be used as the channel instance identifier as-is."
                },
                "VirtualPMem": {
                    "$ref": "#/definitions/VirtualPMemController"
                },
                "NetworkAdapters": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NetworkAdapter"
                    },
                    "description": "An optional object that maps network adapters, identified by friendly name. The provided name is hashed to create the adapter's instance identifier. If the name is already a GUID, that GUID will be used as the identifier as-is."
                },
                "VideoMonitor": {
                    "$ref": "#/definitions/VideoMonitor"
                },
                "Keyboard": {
                    "$ref": "#/definitions/Keyboard"
                },
                "Mouse": {
                    "$ref": "#/definitions/Mouse"
                },
                "HvSocket": {
                    "$ref": "#/definitions/VirtualMachine_HvSocket"
                },
                "EnhancedModeVideo": {
                    "$ref": "#/definitions/EnhancedModeVideo"
                },
                "GuestCrashReporting": {
                    "$ref": "#/definitions/GuestCrashReporting"
                },
                "VirtualSmb": {
                    "$ref": "#/definitions/VirtualSmb"
                },
                "Plan9": {
                    "$ref": "#/definitions/Plan9"
                },
                "Battery": {
                    "$ref": "#/definitions/Battery"
                },
                "FlexibleIov": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/FlexibleIoDevice"
                    },
                    "description": "An optional object that maps flexible IoV devices, identified by friendly name. The provided name is hashed to create the device's instance identifier. If the name is already a GUID, that GUID will be used as the identifier as-is."
                },
                "SharedMemory": {
                    "$ref": "#/definitions/SharedMemoryConfiguration"
                },
                "VirtualPci": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VirtualPciDevice"
                    }
                }
            }
        },
        "EnhancedModeVideo": {
            "type": "object",
            "properties": {
                "ConnectionOptions": {
                    "$ref": "#/definitions/RdpConnectionOptions"
                }
            }
        },
        "ErrorEvent": {
            "type": "object",
            "description": "Error descriptor that provides the info of an error object",
            "properties": {
                "Message": {
                    "type": "string",
                    "description": "Fully formated error message"
                },
                "StackTrace": {
                    "type": "string",
                    "description": "Stack trace in string form"
                },
                "Provider": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
                    "description": "Event definition"
                },
                "EventId": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Flags": {
                    "type": "integer",
                    "format": "uint32"
                },
                "Source": {
                    "type": "string"
                },
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventData"
                    }
                }
            }
        },
        "EventData": {
            "type": "object",
            "description": "Event data element",
            "properties": {
                "Type": {
                    "type": "string",
                    "$ref": "#/definitions/EventDataType"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "ExportLayerOptions": {
            "type": "object",
            "properties": {
                "IsWritableLayer": {
                    "type": "boolean"
                }
            }
        },
        "FlexibleIoDevice": {
            "type": "object",
            "properties": {
                "EmulatorId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "HostingModel": {
                    "type": "string",
                    "$ref": "#/definitions/FlexibleIoDeviceHostingModel"
                },
                "Configuration": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "GpuConfiguration": {
            "type": "object",
            "properties": {
                "AssignmentMode": {
                    "type": "string",
                    "$ref": "#/definitions/GpuAssignmentMode"
                },
                "AssignmentRequest": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "uint16"
                    },
                    "description": "This only applies to List mode, and is ignored in other modes. In GPU-P, string is GPU device interface, and unit16 is partition id. HCS simply assigns the partition with the input id. In GPU-PV, string is GPU device interface, and unit16 is 0xffff. HCS needs to find an available partition to assign."
                },
                "AllowVendorExtension": {
                    "type": "boolean",
                    "description": "Whether we allow vendor extension."
                }
            }
        },
        "GuestConnection": {
            "type": "object",
            "properties": {
                "UseVsock": {
                    "type": "boolean",
                    "description": "When true, use Vsock rather than Hyper-V sockets to communicate with the guest service."
                },
                "UseConnectedSuspend": {
                    "type": "boolean",
                    "description": "When true, don't disconnect the guest connection when pausing the virtual machine."
                }
            }
        },
        "GuestConnectionInfo": {
            "type": "object",
            "description": "Information about the guest.",
            "properties": {
                "SupportedSchemaVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Version"
                    },
                    "description": "Each schema version x.y stands for the range of versions a.b where a==x and b<=y. This list comes from the SupportedSchemaVersions field in GcsCapabilities."
                },
                "ProtocolVersion": {
                    "type": "integer",
                    "format": "uint32"
                },
                "GuestDefinedCapabilities": {
                    "type": "object"
                }
            }
        },
        "GuestCrash": {
            "type": "object",
            "properties": {}
        },
        "GuestCrashReporting": {
            "type": "object",
            "properties": {
                "WindowsCrashSettings": {
                    "$ref": "#/definitions/WindowsCrashReporting"
                }
            }
        },
        "GuestModifySettingRequest": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "type": "string",
                    "$ref": "#/definitions/ModifyResourceType"
                },
                "RequestType": {
                    "type": "string",
                    "$ref": "#/definitions/ModifyRequestType"
                },
                "Settings": {
                    "type": "object"
                }
            }
        },
        "GuestOs": {
            "type": "object",
            "description": "Properties of the guest operating system that boots on a Windows Server Container.",
            "properties": {
                "HostName": {
                    "type": "string",
                    "description": "HostName assigned to a container guest operating system."
                }
            }
        },
        "GuestState": {
            "type": "object",
            "properties": {
                "GuestStateFilePath": {
                    "type": "string",
                    "description": "The path to an existing file uses for persistent guest state storage. An empty string indicates the system should initialize new transient, in-memory guest state."
                },
                "RuntimeStateFilePath": {
                    "type": "string",
                    "description": "The path to an existing file for persistent runtime state storage. An empty string indicates the system should initialize new transient, in-memory runtime state."
                },
                "ForceTransientState": {
                    "type": "boolean",
                    "description": "If true, the guest state and runtime state files will be used as templates to populate transient, in-memory state instead of using the files as persistent backing store."
                }
            }
        },
        "Heartbeat": {
            "type": "object",
            "properties": {}
        },
        "HostedSystem": {
            "type": "object",
            "description": "Describes the configuration of a container compute system hosted by another compute system. This can have its own schema version since the hosted system could support different versions compared to the host machine.",
            "properties": {
                "SchemaVersion": {
                    "$ref": "#/definitions/Version"
                },
                "Container": {
                    "$ref": "#/definitions/Container"
                }
            }
        },
        "HostProcessorModificationRequest": {
            "type": "object",
            "description": "Structure used to request a service processor modification",
            "properties": {
                "Operation": {
                    "type": "string",
                    "$ref": "#/definitions/ModifyServiceOperation"
                },
                "OperationDetails": {
                    "type": "object"
                }
            }
        },
        "HvSocketAddress": {
            "type": "object",
            "description": "This class defines address settings applied to a VM by the GCS every time a VM starts or restores.",
            "properties": {
                "LocalAddress": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "ParentAddress": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                }
            }
        },
        "HvSocketServiceConfig": {
            "type": "object",
            "properties": {
                "BindSecurityDescriptor": {
                    "type": "string",
                    "description": "SDDL string that HvSocket will check before allowing a host process to bind to this specific service. If not specified, defaults to the system DefaultBindSecurityDescriptor, defined in HvSocketSystemWpConfig in V1."
                },
                "ConnectSecurityDescriptor": {
                    "type": "string",
                    "description": "SDDL string that HvSocket will check before allowing a host process to connect to this specific service. If not specified, defaults to the system DefaultConnectSecurityDescriptor, defined in HvSocketSystemWpConfig in V1."
                },
                "AllowWildcardBinds": {
                    "type": "boolean",
                    "description": "If true, HvSocket will process wildcard binds for this service/system combination. Wildcard binds are secured in the registry at SOFTWARE/Microsoft/Windows NT/CurrentVersion/Virtualization/HvSocket/WildcardDescriptors"
                }
            }
        },
        "HvSocketSystemConfig": {
            "type": "object",
            "properties": {
                "DefaultBindSecurityDescriptor": {
                    "type": "string",
                    "description": "SDDL string that HvSocket will check before allowing a host process to bind to an unlisted service for this specific container/VM (not wildcard binds)."
                },
                "DefaultConnectSecurityDescriptor": {
                    "type": "string",
                    "description": "SDDL string that HvSocket will check before allowing a host process to connect to an unlisted service in the VM/container."
                },
                "ServiceTable": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/HvSocketServiceConfig"
                    }
                }
            }
        },
        "IdleProcessorsRequest": {
            "type": "object",
            "properties": {
                "IdleProcessorCount": {
                    "type": "integer",
                    "format": "uint32"
                }
            }
        },
        "InjectNonMaskableInterrupt": {
            "type": "object",
            "description": "A non-maskable interrupt (NMI) was inject by the host management client or other tool.",
            "properties": {}
        },
        "IntegrationComponentStatus": {
            "type": "object",
            "properties": {
                "IsEnabled": {
                    "type": "boolean",
                    "description": "if IC is enabled on this compute system"
                },
                "State": {
                    "type": "string",
                    "$ref": "#/definitions/IntegrationComponentOperationalState"
                },
                "Reason": {
                    "type": "string",
                    "$ref": "#/definitions/IntegrationComponentOperatingStateReason"
                }
            }
        },
        "IovSettings": {
            "type": "object",
            "properties": {}
        },
        "Keyboard": {
            "type": "object",
            "properties": {}
        },
        "Layer": {
            "type": "object",
            "description": "Describe the parent hierarchy for a container's storage",
            "properties": {
                "Id": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
                    "description": "Identifier for a layer."
                },
                "Path": {
                    "type": "string",
                    "description": "Root path of the layer."
                },
                "PathType": {
                    "type": "string",
                    "$ref": "#/definitions/PathType"
                },
                "Cache": {
                    "type": "string",
                    "$ref": "#/definitions/CacheMode"
                }
            }
        },
        "LayerData": {
            "type": "object",
            "properties": {
                "SchemaVersion": {
                    "$ref": "#/definitions/Version"
                },
                "Layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Layer"
                    }
                }
            }
        },
        "LinuxKernelDirect": {
            "type": "object",
            "properties": {
                "KernelFilePath": {
                    "type": "string"
                },
                "InitRdPath": {
                    "type": "string"
                },
                "KernelCmdLine": {
                    "type": "string"
                }
            }
        },
        "LogicalProcessor": {
            "type": "object",
            "properties": {
                "LpIndex": {
                    "type": "integer",
                    "format": "uint32"
                },
                "NodeNumber": {
                    "type": "integer",
                    "format": "uint8"
                },
                "PackageId": {
                    "type": "integer",
                    "format": "uint32"
                },
                "CoreId": {
                    "type": "integer",
                    "format": "uint32"
                },
                "RootVpIndex": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MappedDirectory": {
            "type": "object",
            "description": "Object that describes a directory in the host that is requested to be mapped into a compute system's guest.",
            "properties": {
                "HostPath": {
                    "type": "string",
                    "description": "Path in the host that is going to be mapped into the compute system."
                },
                "HostPathType": {
                    "type": "string",
                    "$ref": "#/definitions/PathType"
                },
                "ContainerPath": {
                    "type": "string",
                    "description": "Path relative to the compute system's guest. This is the resulting path from mapping the host path."
                },
                "ReadOnly": {
                    "type": "boolean",
                    "description": "When set to true, the mapped directory in the compute system's guest will be read-only."
                },
                "SupportCloudFiles": {
                    "type": "boolean",
                    "description": "When set to true, the mapped directory in the compute system's guest will support cloud files."
                }
            }
        },
        "MappedPipe": {
            "type": "object",
            "description": "Object that describes a named pipe that is requested to be mapped into a compute system's guest.",
            "properties": {
                "ContainerPipeName": {
                    "type": "string",
                    "description": "The resulting named pipe that will be accessible in the compute system's guest."
                },
                "HostPath": {
                    "type": "string",
                    "description": "The named pipe path in the host that will be mapped into a compute system's guest."
                },
                "HostPathType": {
                    "type": "string",
                    "$ref": "#/definitions/MappedPipePathType"
                }
            }
        },
        "MappedVirtualDisk": {
            "type": "object",
            "properties": {
                "ContainerPath": {
                    "type": "string"
                },
                "Lun": {
                    "type": "integer",
                    "format": "uint8"
                }
            }
        },
        "MemoryInformationForVm": {
            "type": "object",
            "description": "The response of memory information for virtual machine when query memory propery of compute system",
            "properties": {
                "VirtualNodeCount": {
                    "type": "integer",
                    "format": "uint8"
                },
                "VirtualMachineMemory": {
                    "$ref": "#/definitions/VmMemory"
                },
                "VirtualNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualNodeInfo"
                    }
                }
            }
        },
        "MemoryStats": {
            "type": "object",
            "description": "Memory runtime statistics",
            "properties": {
                "MemoryUsageCommitBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "MemoryUsageCommitPeakBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "MemoryUsagePrivateWorkingSetBytes": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "ModificationRequest": {
            "type": "object",
            "description": "Structure used for service level modification request. Right now, we support modification of a single property type in a call.",
            "properties": {
                "PropertyType": {
                    "type": "string",
                    "$ref": "#/definitions/ModifyPropertyType"
                },
                "Settings": {
                    "type": "object"
                }
            }
        },
        "ModifySettingRequest": {
            "type": "object",
            "properties": {
                "ResourcePath": {
                    "type": "string"
                },
                "RequestType": {
                    "type": "string",
                    "$ref": "#/definitions/ModifyRequestType"
                },
                "Settings": {
                    "type": "object"
                },
                "GuestRequest": {
                    "type": "object"
                }
            }
        },
        "Mouse": {
            "type": "object",
            "properties": {}
        },
        "NetworkAdapter": {
            "type": "object",
            "properties": {
                "EndpointId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "MacAddress": {
                    "type": "string",
                    "format": "mac-address"
                }
            }
        },
        "Networking": {
            "type": "object",
            "properties": {
                "AllowUnqualifiedDnsQuery": {
                    "type": "boolean"
                },
                "DnsSearchList": {
                    "type": "string"
                },
                "NetworkSharedContainerName": {
                    "type": "string"
                },
                "Namespace": {
                    "type": "string",
                    "description": "Guid in windows; string in linux"
                },
                "NetworkAdapters": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                    }
                }
            }
        },
        "OperationFailure": {
            "type": "object",
            "properties": {}
        },
        "OsLayerOptions": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "$ref": "#/definitions/OsLayerType"
                },
                "DisableCiCacheOptimization": {
                    "type": "boolean"
                }
            }
        },
        "PauseNotification": {
            "type": "object",
            "description": "Notification data that is indicated to components running in the Virtual Machine.",
            "properties": {
                "Reason": {
                    "type": "string",
                    "$ref": "#/definitions/PauseReason"
                }
            }
        },
        "PauseOptions": {
            "type": "object",
            "description": "Options for HcsPauseComputeSystem",
            "properties": {
                "SuspensionLevel": {
                    "type": "string",
                    "$ref": "#/definitions/PauseSuspensionLevel"
                },
                "HostedNotification": {
                    "$ref": "#/definitions/PauseNotification"
                }
            }
        },
        "Plan9": {
            "type": "object",
            "properties": {
                "Shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Plan9Share"
                    }
                }
            }
        },
        "Plan9Share": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "AccessName": {
                    "type": "string",
                    "description": "The name by which the guest operation system can access this share, via the aname parameter in the Plan9 protocol."
                },
                "Path": {
                    "type": "string"
                },
                "Port": {
                    "type": "integer",
                    "format": "uint32"
                },
                "AllowedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ProcessDetails": {
            "type": "object",
            "description": "Information about a process running in a container",
            "properties": {
                "ProcessId": {
                    "type": "integer",
                    "format": "uint32"
                },
                "ImageName": {
                    "type": "string"
                },
                "CreateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "UserTime100ns": {
                    "type": "integer",
                    "format": "uint64"
                },
                "KernelTime100ns": {
                    "type": "integer",
                    "format": "uint64"
                },
                "MemoryCommitBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "MemoryWorkingSetPrivateBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "MemoryWorkingSetSharedBytes": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "ProcessModifyRequest": {
            "type": "object",
            "description": "Passed to HcsRpc_ModifyProcess",
            "properties": {
                "Operation": {
                    "type": "string",
                    "$ref": "#/definitions/ModifyOperation"
                },
                "ConsoleSize": {
                    "$ref": "#/definitions/ConsoleSize"
                },
                "CloseHandle": {
                    "$ref": "#/definitions/CloseHandle"
                }
            }
        },
        "ProcessorLimits": {
            "type": "object",
            "description": "Used when modifying processor scheduling limits of a virtual machine.",
            "properties": {}
        },
        "ProcessorStats": {
            "type": "object",
            "description": "CPU runtime statistics",
            "properties": {
                "TotalRuntime100ns": {
                    "type": "integer",
                    "format": "uint64"
                },
                "RuntimeUser100ns": {
                    "type": "integer",
                    "format": "uint64"
                },
                "RuntimeKernel100ns": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "ProcessorTopology": {
            "type": "object",
            "description": "Structure used to return processor topology for a Service property query",
            "properties": {
                "LogicalProcessorCount": {
                    "type": "integer",
                    "format": "uint32"
                },
                "LogicalProcessors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LogicalProcessor"
                    }
                }
            }
        },
        "ProcessParameters": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "type": "string"
                },
                "CommandLine": {
                    "type": "string"
                },
                "CommandArgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "optional alternative to CommandLine, currently only supported by Linux GCS"
                },
                "User": {
                    "type": "string"
                },
                "WorkingDirectory": {
                    "type": "string"
                },
                "Environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "RestrictedToken": {
                    "type": "boolean",
                    "description": "if set, will run as low-privilege process"
                },
                "EmulateConsole": {
                    "type": "boolean",
                    "description": "if set, ignore StdErrPipe"
                },
                "CreateStdInPipe": {
                    "type": "boolean"
                },
                "CreateStdOutPipe": {
                    "type": "boolean"
                },
                "CreateStdErrPipe": {
                    "type": "boolean"
                },
                "ConsoleSize": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "uint16"
                    },
                    "description": "height then width"
                },
                "UseExistingLogin": {
                    "type": "boolean",
                    "description": "if set, find an existing session for the user and create the process in it"
                },
                "UseLegacyConsole": {
                    "type": "boolean",
                    "description": "if set, use the legacy console instead of conhost"
                }
            }
        },
        "ProcessStatus": {
            "type": "object",
            "description": "Provided in the EventData parameter of an HcsEventProcessExited HCS_EVENT.",
            "properties": {
                "ProcessId": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "The process id (PID) of the process."
                },
                "Exited": {
                    "type": "boolean",
                    "description": "True if the process has exited, false if it has not exited yet."
                },
                "ExitCode": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Exit code of the process. The ExitCode is valid only if LastWaitResult is S_OK and Exited is true."
                },
                "LastWaitResult": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status of waiting for process exit. S_OK indicates success. Other HRESULT values on error."
                }
            }
        },
        "Properties": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "SystemType": {
                    "type": "string",
                    "$ref": "#/definitions/SystemType"
                },
                "RuntimeOsType": {
                    "type": "string",
                    "$ref": "#/definitions/OsType"
                },
                "Name": {
                    "type": "string"
                },
                "Owner": {
                    "type": "string"
                },
                "RuntimeId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "RuntimeTemplateId": {
                    "type": "string"
                },
                "State": {
                    "type": "string",
                    "$ref": "#/definitions/State"
                },
                "Stopped": {
                    "type": "boolean"
                },
                "ExitType": {
                    "type": "string",
                    "$ref": "#/definitions/NotificationType"
                },
                "Memory": {
                    "$ref": "#/definitions/MemoryInformationForVm"
                },
                "Statistics": {
                    "$ref": "#/definitions/Statistics"
                },
                "ProcessList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProcessDetails"
                    }
                },
                "TerminateOnLastHandleClosed": {
                    "type": "boolean"
                },
                "HostingSystemId": {
                    "type": "string"
                },
                "SharedMemoryRegionInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedMemoryRegionInfo"
                    }
                },
                "GuestConnectionInfo": {
                    "$ref": "#/definitions/GuestConnectionInfo"
                },
                "ICHeartbeatStatus": {
                    "$ref": "#/definitions/IntegrationComponentStatus"
                }
            }
        },
        "QoSCapabilities": {
            "type": "object",
            "properties": {
                "ProcessorQoSSupported": {
                    "type": "boolean"
                }
            }
        },
        "RdpConnectionOptions": {
            "type": "object",
            "properties": {
                "AccessSids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "NamedPipe": {
                    "type": "string"
                }
            }
        },
        "RegistryChanges": {
            "type": "object",
            "properties": {
                "AddValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistryValue"
                    }
                },
                "DeleteKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistryKey"
                    }
                }
            }
        },
        "RegistryFlushState": {
            "type": "object",
            "description": "Represents the flush state of the registry hive for a Windows container's job object.",
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Determines whether the flush state of the registry hive is enabled or not. When not enabled, flushes are ignored and changes to the registry are not preserved."
                }
            }
        },
        "RegistryKey": {
            "type": "object",
            "properties": {
                "Hive": {
                    "type": "string",
                    "$ref": "#/definitions/RegistryHive"
                },
                "Name": {
                    "type": "string"
                },
                "Volatile": {
                    "type": "boolean"
                }
            }
        },
        "RegistryValue": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/definitions/RegistryKey"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string",
                    "$ref": "#/definitions/RegistryValueType"
                },
                "StringValue": {
                    "type": "string",
                    "description": "One and only one value type must be set."
                },
                "BinaryValue": {
                    "type": "string",
                    "format": "byte"
                },
                "DWordValue": {
                    "type": "integer",
                    "format": "uint32"
                },
                "QWordValue": {
                    "type": "integer",
                    "format": "uint64"
                },
                "CustomType": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Only used if RegistryValueType is CustomType The data is in BinaryValue"
                }
            }
        },
        "RestoreState": {
            "type": "object",
            "properties": {
                "SaveStateFilePath": {
                    "type": "string",
                    "description": "The path to the save state file to restore the system from."
                },
                "TemplateSystemId": {
                    "type": "string",
                    "description": "The ID of the template system to clone this new system off of. An empty string indicates the system should not be cloned from a template."
                }
            }
        },
        "ResultError": {
            "type": "object",
            "description": "Extended error information returned by the HCS",
            "properties": {
                "Error": {
                    "type": "integer",
                    "format": "int32"
                },
                "ErrorMessage": {
                    "type": "string"
                }
            }
        },
        "SaveOptions": {
            "type": "object",
            "properties": {
                "SaveType": {
                    "type": "string",
                    "$ref": "#/definitions/SaveType"
                },
                "SaveStateFilePath": {
                    "type": "string",
                    "description": "The path to the file that will container the saved state."
                }
            }
        },
        "Scsi": {
            "type": "object",
            "description": "Object describing a SCSI controller.",
            "properties": {
                "Attachments": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Attachment"
                    },
                    "description": "Map of attachments, where the key is the integer LUN number on the controller."
                }
            }
        },
        "Service_PropertyQuery": {
            "type": "object",
            "properties": {
                "PropertyTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "$ref": "#/definitions/GetPropertyType"
                    }
                }
            }
        },
        "ServiceProperties": {
            "type": "object",
            "description": "The service properties will be returned as an array corresponding to the requested property types.",
            "properties": {
                "Properties": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "Services": {
            "type": "object",
            "properties": {
                "Heartbeat": {
                    "$ref": "#/definitions/Heartbeat"
                }
            }
        },
        "SetPropertyOperation": {
            "type": "object",
            "description": "Set properties operation settings",
            "properties": {
                "GroupId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "PropertyCode": {
                    "type": "integer",
                    "format": "uint32"
                },
                "PropertyValue": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "SharedMemoryConfiguration": {
            "type": "object",
            "properties": {
                "Regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharedMemoryRegion"
                    }
                }
            }
        },
        "SharedMemoryRegion": {
            "type": "object",
            "properties": {
                "SectionName": {
                    "type": "string"
                },
                "StartOffset": {
                    "type": "integer",
                    "format": "uint64"
                },
                "Length": {
                    "type": "integer",
                    "format": "uint64"
                },
                "AllowGuestWrite": {
                    "type": "boolean"
                },
                "HiddenFromGuest": {
                    "type": "boolean"
                }
            }
        },
        "SharedMemoryRegionInfo": {
            "type": "object",
            "properties": {
                "SectionName": {
                    "type": "string"
                },
                "GuestPhysicalAddress": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "SignalProcessOptions": {
            "type": "object",
            "properties": {
                "Signal": {
                    "type": "string",
                    "$ref": "#/definitions/ProcessSignal"
                }
            }
        },
        "Statistics": {
            "type": "object",
            "description": "Runtime statistics for a container",
            "properties": {
                "Timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "ContainerStartTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "Uptime100ns": {
                    "type": "integer",
                    "format": "uint64"
                },
                "Processor": {
                    "$ref": "#/definitions/ProcessorStats"
                },
                "Memory": {
                    "$ref": "#/definitions/MemoryStats"
                },
                "Storage": {
                    "$ref": "#/definitions/StorageStats"
                }
            }
        },
        "Storage": {
            "type": "object",
            "properties": {
                "Layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Layer"
                    },
                    "description": "List of layers that describe the parent hierarchy for a container's storage. These layers combined together, presented as a disposable and/or committable working storage, are used by the container to record all changes done to the parent layers."
                },
                "Path": {
                    "type": "string",
                    "description": "Path that points to the scratch space of a container, where parent layers are combined together to present a new disposable and/or committable layer with the changes done during its runtime."
                },
                "QoS": {
                    "$ref": "#/definitions/StorageQoS"
                }
            }
        },
        "StorageQoS": {
            "type": "object",
            "description": "Describes storage quality of service settings, relative to a storage volume.",
            "properties": {
                "IopsMaximum": {
                    "type": "integer",
                    "format": "uint64",
                    "description": "Defines the maximum allowed Input/Output operations per second in a volume."
                },
                "BandwidthMaximum": {
                    "type": "integer",
                    "format": "uint64",
                    "description": "Defines the maximum bandwidth (bytes per second) allowed in a volume."
                }
            }
        },
        "StorageStats": {
            "type": "object",
            "description": "Storage runtime statistics",
            "properties": {
                "ReadCountNormalized": {
                    "type": "integer",
                    "format": "uint64"
                },
                "ReadSizeBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "WriteCountNormalized": {
                    "type": "integer",
                    "format": "uint64"
                },
                "WriteSizeBytes": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "System_PropertyQuery": {
            "type": "object",
            "description": "By default the basic properties will be returned. This query provides a way to request specific properties.",
            "properties": {
                "PropertyTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "$ref": "#/definitions/System_PropertyType"
                    }
                }
            }
        },
        "SystemExit": {
            "type": "object",
            "properties": {}
        },
        "SystemExitStatus": {
            "type": "object",
            "description": "Document provided in the EventData parameter of an HcsEventSystemExited HCS_EVENT.",
            "properties": {
                "Status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Exit status (HRESULT) for the system."
                },
                "ExitType": {
                    "type": "string",
                    "$ref": "#/definitions/NotificationType"
                }
            }
        },
        "SystemProcessorModificationRequest": {
            "type": "object",
            "description": "Structure used to request a system processor modification",
            "properties": {
                "GroupId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                }
            }
        },
        "SystemQuery": {
            "type": "object",
            "properties": {
                "Ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Types": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "$ref": "#/definitions/SystemType"
                    }
                },
                "Owners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SystemTime": {
            "type": "object",
            "properties": {
                "Year": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Month": {
                    "type": "integer",
                    "format": "uint16"
                },
                "DayOfWeek": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Day": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Hour": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Minute": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Second": {
                    "type": "integer",
                    "format": "uint16"
                },
                "Milliseconds": {
                    "type": "integer",
                    "format": "uint16"
                }
            }
        },
        "TimeZoneInformation": {
            "type": "object",
            "properties": {
                "Bias": {
                    "type": "integer",
                    "format": "int32"
                },
                "StandardName": {
                    "type": "string"
                },
                "StandardDate": {
                    "$ref": "#/definitions/SystemTime"
                },
                "StandardBias": {
                    "type": "integer",
                    "format": "int32"
                },
                "DaylightName": {
                    "type": "string"
                },
                "DaylightDate": {
                    "$ref": "#/definitions/SystemTime"
                },
                "DaylightBias": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Topology": {
            "type": "object",
            "properties": {
                "Memory": {
                    "$ref": "#/definitions/VirtualMachine_Memory"
                },
                "Processor": {
                    "$ref": "#/definitions/VirtualMachine_Processor"
                }
            }
        },
        "TripleFault": {
            "type": "object",
            "properties": {}
        },
        "Uefi": {
            "type": "object",
            "properties": {
                "EnableDebugger": {
                    "type": "boolean"
                },
                "SecureBootTemplateId": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
                },
                "ApplySecureBootTemplate": {
                    "type": "string",
                    "$ref": "#/definitions/ApplySecureBootTemplateType"
                },
                "BootThis": {
                    "$ref": "#/definitions/UefiBootEntry"
                },
                "Console": {
                    "type": "string",
                    "$ref": "#/definitions/SerialConsole"
                },
                "StopOnBootFailure": {
                    "type": "boolean"
                }
            }
        },
        "UefiBootEntry": {
            "type": "object",
            "properties": {
                "DeviceType": {
                    "type": "string",
                    "$ref": "#/definitions/UefiBootDevice"
                },
                "DevicePath": {
                    "type": "string"
                },
                "DiskNumber": {
                    "type": "integer",
                    "format": "uint16"
                },
                "OptionalData": {
                    "type": "string"
                },
                "VmbFsRootPath": {
                    "type": "string"
                }
            }
        },
        "Version": {
            "type": "object",
            "description": "Object that describes a version with a Major.Minor format.",
            "properties": {
                "Major": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "The major version value. Individual major versions are not compatible with one another."
                },
                "Minor": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "The minor version value. A lower minor version is considered a compatible subset of a higher minor version."
                }
            }
        },
        "VideoMonitor": {
            "type": "object",
            "properties": {
                "HorizontalResolution": {
                    "type": "integer",
                    "format": "uint16"
                },
                "VerticalResolution": {
                    "type": "integer",
                    "format": "uint16"
                },
                "ConnectionOptions": {
                    "$ref": "#/definitions/RdpConnectionOptions"
                }
            }
        },
        "VirtioSerial": {
            "type": "object",
            "properties": {
                "Ports": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VirtioSerialPort"
                    }
                }
            }
        },
        "VirtioSerialPort": {
            "type": "object",
            "properties": {
                "NamedPipe": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "VirtualDeviceFailure": {
            "type": "object",
            "description": "Provides information on failures originated by a virtual device.",
            "properties": {}
        },
        "VirtualMachine": {
            "type": "object",
            "description": "Configuration of a virtual machine, used during its creation to set up and/or use resources.",
            "properties": {
                "StopOnReset": {
                    "type": "boolean",
                    "description": "When set to true, the virtual machine will treat a reset as a stop, releasing resources and cleaning up state."
                },
                "Chipset": {
                    "$ref": "#/definitions/Chipset"
                },
                "ComputeTopology": {
                    "$ref": "#/definitions/Topology"
                },
                "Devices": {
                    "$ref": "#/definitions/Devices"
                },
                "Services": {
                    "$ref": "#/definitions/Services"
                },
                "GuestState": {
                    "$ref": "#/definitions/GuestState"
                },
                "RestoreState": {
                    "$ref": "#/definitions/RestoreState"
                },
                "RegistryChanges": {
                    "$ref": "#/definitions/RegistryChanges"
                },
                "StorageQoS": {
                    "$ref": "#/definitions/StorageQoS"
                },
                "GuestConnection": {
                    "$ref": "#/definitions/GuestConnection"
                }
            }
        },
        "VirtualMachine_HvSocket": {
            "type": "object",
            "description": "HvSocket configuration for a VM",
            "properties": {
                "HvSocketConfig": {
                    "$ref": "#/definitions/HvSocketSystemConfig"
                }
            }
        },
        "VirtualMachine_Memory": {
            "type": "object",
            "properties": {
                "SizeInMB": {
                    "type": "integer",
                    "format": "uint64"
                },
                "AllowOvercommit": {
                    "type": "boolean",
                    "description": "If enabled, then the VM's memory is backed by the Windows pagefile rather than physically backed, statically allocated memory."
                },
                "BackingPageSize": {
                    "type": "string",
                    "$ref": "#/definitions/MemoryBackingPageSize"
                },
                "PinBackingPages": {
                    "type": "boolean",
                    "description": "If enabled, then each backing page is physically pinned on first access."
                },
                "ForbidSmallBackingPages": {
                    "type": "boolean",
                    "description": "If enabled, then backing page chunks smaller than the backing page size are never used unless the system is under extreme memory pressure. If the backing page size is Small, then it is forced to Large when this option is enabled."
                },
                "EnableHotHint": {
                    "type": "boolean",
                    "description": "If enabled, then the memory hot hint feature is exposed to the VM, allowing it to prefetch pages into its working set. (if supported by the guest operating system)."
                },
                "EnableColdHint": {
                    "type": "boolean",
                    "description": "If enabled, then the memory cold hint feature is exposed to the VM, allowing it to trim zeroed pages from its working set (if supported by the guest operating system)."
                },
                "EnableColdDiscardHint": {
                    "type": "boolean",
                    "description": "If enabled, then the memory cold discard hint feature is exposed to the VM, allowing it to trim non-zeroed pages from the working set (if supported by the guest operating system)."
                },
                "EnableDeferredCommit": {
                    "type": "boolean",
                    "description": "If enabled, then commit is not charged for each backing page until first access."
                },
                "LowMmioGapInMB": {
                    "type": "integer",
                    "format": "uint64",
                    "description": "Low MMIO region allocated below 4GB"
                },
                "HighMmioBaseInMB": {
                    "type": "integer",
                    "format": "uint64",
                    "description": "High MMIO region allocated above 4GB (base and size)"
                },
                "HighMmioGapInMB": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "VirtualMachine_Processor": {
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer",
                    "format": "uint32"
                },
                "Limit": {
                    "type": "integer",
                    "format": "uint64"
                },
                "Weight": {
                    "type": "integer",
                    "format": "uint64"
                },
                "ExposeVirtualizationExtensions": {
                    "type": "boolean"
                },
                "EnablePerfmonPmu": {
                    "type": "boolean"
                },
                "EnablePerfmonPebs": {
                    "type": "boolean"
                },
                "EnablePerfmonLbr": {
                    "type": "boolean"
                },
                "EnablePerfmonIpt": {
                    "type": "boolean"
                }
            }
        },
        "VirtualNodeInfo": {
            "type": "object",
            "properties": {
                "VirtualNodeIndex": {
                    "type": "integer",
                    "format": "uint8"
                },
                "PhysicalNodeNumber": {
                    "type": "integer",
                    "format": "uint8"
                },
                "VirtualProcessorCount": {
                    "type": "integer",
                    "format": "uint32"
                },
                "MemoryUsageInPages": {
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "VirtualPciDevice": {
            "type": "object",
            "properties": {
                "Functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualPciFunction"
                    }
                }
            }
        },
        "VirtualPciFunction": {
            "type": "object",
            "properties": {
                "DeviceInstancePath": {
                    "type": "string"
                },
                "VirtualFunction": {
                    "type": "integer",
                    "format": "uint16"
                }
            }
        },
        "VirtualPMemController": {
            "type": "object",
            "properties": {
                "Devices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VirtualPMemDevice"
                    }
                },
                "MaximumCount": {
                    "type": "integer",
                    "format": "uint8",
                    "description": "This field indicates how many empty devices to add to the controller. If non-zero, additional VirtualPMemDevice objects with no HostPath and no Mappings will be added to the Devices map to get up to the MaximumCount. These devices will be configured with either the MaximumSizeBytes field if non-zero, or with the default maximum, 512 Mb."
                },
                "MaximumSizeBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "Backing": {
                    "type": "string",
                    "$ref": "#/definitions/VirtualPMemBackingType"
                }
            }
        },
        "VirtualPMemDevice": {
            "type": "object",
            "properties": {
                "HostPath": {
                    "type": "string"
                },
                "ReadOnly": {
                    "type": "boolean"
                },
                "ImageFormat": {
                    "type": "string",
                    "$ref": "#/definitions/VirtualPMemImageFormat"
                },
                "SizeBytes": {
                    "type": "integer",
                    "format": "uint64"
                },
                "Mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VirtualPMemMapping"
                    }
                }
            }
        },
        "VirtualPMemMapping": {
            "type": "object",
            "properties": {
                "HostPath": {
                    "type": "string"
                },
                "ImageFormat": {
                    "type": "string",
                    "$ref": "#/definitions/VirtualPMemImageFormat"
                }
            }
        },
        "VirtualSmb": {
            "type": "object",
            "properties": {
                "Shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualSmbShare"
                    }
                },
                "DirectFileMappingInMB": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VirtualSmbShare": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "AllowedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Options": {
                    "$ref": "#/definitions/VirtualSmbShareOptions"
                }
            }
        },
        "VirtualSmbShareOptions": {
            "type": "object",
            "properties": {
                "ReadOnly": {
                    "type": "boolean"
                },
                "ShareRead": {
                    "type": "boolean",
                    "description": "convert exclusive access to shared read access"
                },
                "CacheIo": {
                    "type": "boolean",
                    "description": "all opens will use cached I/O"
                },
                "NoOplocks": {
                    "type": "boolean",
                    "description": "disable oplock support"
                },
                "TakeBackupPrivilege": {
                    "type": "boolean",
                    "description": "Acquire the backup privilege when attempting to open"
                },
                "UseShareRootIdentity": {
                    "type": "boolean",
                    "description": "Use the identity of the share root when opening"
                },
                "NoDirectmap": {
                    "type": "boolean",
                    "description": "disable Direct Mapping"
                },
                "NoLocks": {
                    "type": "boolean",
                    "description": "disable Byterange locks"
                },
                "NoDirnotify": {
                    "type": "boolean",
                    "description": "disable Directory CHange Notifications"
                },
                "VmSharedMemory": {
                    "type": "boolean",
                    "description": "share is use for VM shared memory"
                },
                "RestrictFileAccess": {
                    "type": "boolean",
                    "description": "allow access only to the files specified in AllowedFiles"
                },
                "ForceLevelIIOplocks": {
                    "type": "boolean",
                    "description": "disable all oplocks except Level II"
                },
                "ReparseBaseLayer": {
                    "type": "boolean",
                    "description": "Allow the host to reparse this base layer"
                },
                "PseudoOplocks": {
                    "type": "boolean",
                    "description": "Enable pseudo-oplocks"
                },
                "NonCacheIo": {
                    "type": "boolean",
                    "description": "All opens will use non-cached IO"
                },
                "PseudoDirnotify": {
                    "type": "boolean",
                    "description": "Enable pseudo directory change notifications"
                },
                "SingleFileMapping": {
                    "type": "boolean",
                    "description": "Block directory enumeration, renames, and deletes."
                },
                "SupportCloudFiles": {
                    "type": "boolean",
                    "description": "Support Cloud Files functionality"
                }
            }
        },
        "VmMemory": {
            "type": "object",
            "properties": {
                "AvailableMemory": {
                    "type": "integer",
                    "format": "int32"
                },
                "AvailableMemoryBuffer": {
                    "type": "integer",
                    "format": "int32"
                },
                "ReservedMemory": {
                    "type": "integer",
                    "format": "uint64"
                },
                "AssignedMemory": {
                    "type": "integer",
                    "format": "uint64"
                },
                "SlpActive": {
                    "type": "boolean"
                },
                "BalancingEnabled": {
                    "type": "boolean"
                },
                "DmOperationInProgress": {
                    "type": "boolean"
                }
            }
        },
        "WindowsCrashReport": {
            "type": "object",
            "description": "Windows specific crash information",
            "properties": {
                "DumpFile": {
                    "type": "string",
                    "description": "Path to a Windows memory dump file. This will contain the same path as the configured in the GuestCrashReporting device. This field is not valid unless the FinalPhase is Complete."
                },
                "OsMajorVersion": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Major version as reported by the guest OS."
                },
                "OsMinorVersion": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Minor version as reported by the guest OS."
                },
                "OsBuildNumber": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Build number as reported by the guest OS."
                },
                "OsServicePackMajorVersion": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Service pack major version as reported by the guest OS."
                },
                "OsServicePackMinorVersion": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Service pack minor version as reported by the guest OS."
                },
                "OsSuiteMask": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Suite mask as reported by the guest OS."
                },
                "OsProductType": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Product type as reported by the guest OS."
                },
                "Status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status of the crash dump. S_OK indicates success, other HRESULT values on error."
                },
                "FinalPhase": {
                    "type": "string",
                    "$ref": "#/definitions/WindowsCrashPhase"
                }
            }
        },
        "WindowsCrashReporting": {
            "type": "object",
            "properties": {
                "DumpFileName": {
                    "type": "string"
                },
                "MaxDumpSize": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "WorkerExit": {
            "type": "object",
            "properties": {}
        },
        "ApplySecureBootTemplateType": {
            "type": "string",
            "enum": [
                "Skip",
                "Apply"
            ]
        },
        "AttachmentType": {
            "type": "string",
            "enum": [
                "VirtualDisk",
                "Iso",
                "PassThru"
            ]
        },
        "CacheMode": {
            "type": "string",
            "enum": [
                "",
                "Disabled",
                "Enabled",
                "Private",
                "PrivateAllowSharing"
            ]
        },
        "CachingMode": {
            "type": "string",
            "enum": [
                "Uncached",
                "Cached",
                "ReadOnlyCached"
            ]
        },
        "ContainerCredentialGuardModifyOperation": {
            "type": "string",
            "enum": [
                "AddInstance",
                "RemoveInstance"
            ]
        },
        "ContainerCredentialGuardTransport": {
            "type": "string",
            "enum": [
                "LRPC",
                "HvSocket"
            ]
        },
        "CrashType": {
            "type": "string",
            "enum": [
                "CrashGuest"
            ]
        },
        "DeviceType": {
            "type": "string",
            "enum": [
                "ClassGuid",
                "DeviceInstance",
                "GpuMirror"
            ]
        },
        "EventDataType": {
            "type": "string",
            "description": "Data types for event data elements, based on EVT_VARIANT_TYPE",
            "enum": [
                "Empty",
                "String",
                "AnsiString",
                "SByte",
                "Byte",
                "Int16",
                "UInt16",
                "Int32",
                "UInt32",
                "Int64",
                "UInt64",
                "Single",
                "Double",
                "Boolean",
                "Binary",
                "Guid"
            ]
        },
        "FlexibleIoDeviceHostingModel": {
            "type": "string",
            "enum": [
                "Internal",
                "External"
            ]
        },
        "GetPropertyType": {
            "type": "string",
            "description": "Service property type queried by HcsGetServiceProperties",
            "enum": [
                "Basic",
                "CpuGroup",
                "ProcessorTopology",
                "ContainerCredentialGuard",
                "QoSCapabilities"
            ]
        },
        "GpuAssignmentMode": {
            "type": "string",
            "enum": [
                "Disabled",
                "Default",
                "List",
                "Mirror"
            ]
        },
        "IntegrationComponentOperatingStateReason": {
            "type": "string",
            "description": "possible reason for integration component's state",
            "enum": [
                "Unknown",
                "AppsInCriticalState",
                "CommunicationTimedOut",
                "FailedCommunication",
                "HealthyApps",
                "ProtocolMismatch"
            ]
        },
        "IntegrationComponentOperationalState": {
            "type": "string",
            "description": "operational status for integration component",
            "enum": [
                "Unknown",
                "Degraded",
                "Dormant",
                "Error",
                "LostCommunication",
                "NonRecoverableError",
                "NoContact",
                "Ok"
            ]
        },
        "MappedPipePathType": {
            "type": "string",
            "enum": [
                "AbsolutePath",
                "VirtualSmbPipeName"
            ]
        },
        "MemoryBackingPageSize": {
            "type": "string",
            "enum": [
                "Small",
                "Large"
            ]
        },
        "ModifyOperation": {
            "type": "string",
            "enum": [
                "ConsoleSize",
                "CloseHandle"
            ]
        },
        "ModifyPropertyType": {
            "type": "string",
            "description": "Service property type modified by HcsModifyServiceSettings",
            "enum": [
                "CpuGroup",
                "ContainerCredentialGuard"
            ]
        },
        "ModifyRequestType": {
            "type": "string",
            "enum": [
                "Add",
                "Remove",
                "Update"
            ]
        },
        "ModifyResourceType": {
            "type": "string",
            "enum": [
                "Memory",
                "MappedDirectory",
                "MappedPipe",
                "MappedVirtualDisk",
                "CombinedLayers",
                "NetworkNamespace",
                "CimMount"
            ]
        },
        "ModifyServiceOperation": {
            "type": "string",
            "description": "Enumeration of different supported service processor modification requests",
            "enum": [
                "CreateGroup",
                "DeleteGroup",
                "SetProperty"
            ]
        },
        "NotificationType": {
            "type": "string",
            "description": "Exit type of a compute system.",
            "enum": [
                "None",
                "GracefulExit",
                "ForcedExit",
                "UnexpectedExit",
                "Unknown"
            ]
        },
        "OsLayerType": {
            "type": "string",
            "enum": [
                "Container",
                "Vm"
            ]
        },
        "OsType": {
            "type": "string",
            "enum": [
                "",
                "Windows",
                "Linux"
            ]
        },
        "PathType": {
            "type": "string",
            "enum": [
                "AbsolutePath",
                "VirtualSmbShareName"
            ]
        },
        "PauseReason": {
            "type": "string",
            "description": "Pause reason that is indicated to components running in the Virtual Machine.",
            "enum": [
                "None",
                "Save",
                "Template"
            ]
        },
        "PauseSuspensionLevel": {
            "type": "string",
            "enum": [
                "Suspend",
                "MemoryLow",
                "MemoryMedium",
                "MemoryHigh"
            ]
        },
        "ProcessSignal": {
            "type": "string",
            "enum": [
                "CtrlC",
                "CtrlBreak",
                "CtrlClose",
                "CtrlLogOff",
                "CtrlShutdown"
            ]
        },
        "RegistryHive": {
            "type": "string",
            "enum": [
                "System",
                "Software",
                "Security",
                "Sam"
            ]
        },
        "RegistryValueType": {
            "type": "string",
            "enum": [
                "None",
                "String",
                "ExpandedString",
                "MultiString",
                "Binary",
                "DWord",
                "QWord",
                "CustomType"
            ]
        },
        "SaveType": {
            "type": "string",
            "enum": [
                "ToFile",
                "AsTemplate"
            ]
        },
        "SerialConsole": {
            "type": "string",
            "enum": [
                "Default",
                "Disabled",
                "ComPort1",
                "ComPort2"
            ]
        },
        "State": {
            "type": "string",
            "description": "Compute system state which is exposed to external clients",
            "enum": [
                "Created",
                "Running",
                "Paused",
                "Stopped",
                "SavedAsTemplate",
                "Unknown"
            ]
        },
        "StdHandle": {
            "type": "string",
            "enum": [
                "StdIn",
                "StdOut",
                "StdErr",
                "All"
            ]
        },
        "System_PropertyType": {
            "type": "string",
            "description": "Compute system property types. The properties will be returned as a Schema.Responses.System.Properties instance.",
            "enum": [
                "Memory",
                "Statistics",
                "ProcessList",
                "TerminateOnLastHandleClosed",
                "SharedMemoryRegion",
                "GuestConnection",
                "ICHeartbeatStatus"
            ]
        },
        "SystemType": {
            "type": "string",
            "enum": [
                "Container",
                "VirtualMachine"
            ]
        },
        "UefiBootDevice": {
            "type": "string",
            "enum": [
                "ScsiDrive",
                "VmbFs",
                "Network",
                "File"
            ]
        },
        "VirtualPMemBackingType": {
            "type": "string",
            "enum": [
                "Virtual",
                "Physical"
            ]
        },
        "VirtualPMemImageFormat": {
            "type": "string",
            "enum": [
                "Vhdx",
                "Vhd1"
            ]
        },
        "WindowsCrashPhase": {
            "type": "string",
            "description": "Indicated the progress of a Windows memory dump in a WindowsCrashReport.",
            "enum": [
                "Inactive",
                "CrashValues",
                "Starting",
                "Started",
                "Writing",
                "Complete"
            ]
        }
    }
}